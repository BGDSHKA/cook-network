{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Posts.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/AddPostForm/AddPostForm.jsx","components/Profile/MyPosts/Post/Posts.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","autoFocus","onChange","e","currentTarget","value","onBlur","updateStatus","ProfileInfo","profile","className","s","descriptionBlock","photos","large","src","alt","userPhoto","aboutMe","contacts","vk","lookingForAJob","Preloader","maxLength10","maxLengthCreator","Textarea","FormControl","reduxForm","form","onSubmit","handleSubmit","Field","validate","required","component","name","placeholder","Post","item","message","likes","MyPosts","React","memo","postsElements","posts","map","p","likesCount","postsBlock","values","addPost","newMessageBody","MyPostsContainer","connect","state","profilePage","newPostText","dispatch","addPostActionCreator","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.4087818a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__2hx_Z\",\"HeaderBlock\":\"ProfileInfo_HeaderBlock__10noB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__3o_34\",\"posts\":\"MyPosts_posts__3NKAG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Posts_item__2DMNR\"};","import React, { useState, useEffect } from 'react'\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n    const [editMode, setEditMode] = useState(false)\r\n    const [status, setStatus] = useState(props.status)\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n                <div>\r\n                    <span onDoubleClick={activateEditMode} >{props.status || '====='}</span>\r\n                </div>\r\n            }\r\n            {editMode &&\r\n                <div>\r\n                    <input autoFocus={true}\r\n                        onChange={onStatusChange}\r\n                        onBlur={deactivateEditMode}\r\n                        value={status}\r\n                    />\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks\r\n","import React from 'react';\r\nimport Preloader from '../../../common/Preloader/Preloader';\r\nimport s from './ProfileInfo.module.css';\r\nimport userPhoto from '../../../assets/images/nophoto.png'\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus}) => {\r\n\r\n    if (!profile) {\r\n       return <Preloader />\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n            <div className={s.descriptionBlock}>\r\n               {profile.photos.large \r\n               ? <img src={profile.photos.large} alt=\"\" />\r\n               : <img src={userPhoto} alt=\"\" />} \r\n                <ProfileStatusWithHooks status={status} updateStatus={updateStatus} />\r\n                <div>{profile.aboutMe}</div>\r\n                <div>vk: {profile.contacts.vk}</div>\r\n                {profile.lookingForAJob ? '✓ Ищу работу' : '× Не ищу работу'}\r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react'\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { FormControl } from '../../../../common/FormsControls/FormsControl';\r\nimport { maxLengthCreator, required } from '../../../../utils/validators/validators';\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\nconst Textarea = FormControl('textarea');\r\n\r\nconst AddPostForm = (props) => {\r\n\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field validate={[required, maxLength10]} component={Textarea} name=\"newMessageBody\" placeholder=\"Enter your message\" />\r\n      </div>\r\n      <div>\r\n        <button>Add post</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default reduxForm({ form: \"ProfileAddNewPostForm\" })(AddPostForm)\r\n","import React from 'react';\r\nimport s from './Posts.module.css';\r\n\r\nconst Post = (props) => {\r\n  return (\r\n\r\n    <div className='posts'>\r\n    <div className={s.item}>\r\n        <img src='https://girlday.ru/upload/iblock/c81/c8158add497d90cbce3e21968cd5d731.jpg'></img>\r\n        {props.message}\r\n        <div>\r\n          <span>{props.likes} Like</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n\r\n  )\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport ProfileAddPostFormRedux from './AddPostForm/AddPostForm';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Posts';\r\n\r\nconst MyPosts = React.memo(props => {\r\n\r\n  let postsElements = props.posts\r\n    .map(p => <Post message={p.message} likes={p.likesCount} />);\r\n\r\n  let addNewPost = (values) => {\r\n    props.addPost(values.newMessageBody);\r\n  }\r\n\r\n  return (\r\n    <div className={s.postsBlock}>\r\n      <h3>My posts</h3>\r\n      <ProfileAddPostFormRedux onSubmit={addNewPost} />\r\n      <div className={s.posts}>\r\n        {postsElements}\r\n      </div>\r\n    </div>\r\n\r\n  )\r\n});\r\n\r\nexport default MyPosts;","import { addPostActionCreator } from '../../../redux/profile-reducer';\r\nimport MyPosts from './MyPosts';\r\nimport { connect } from 'react-redux';\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.posts,\r\n    newPostText: state.profilePage.newPostText\r\n  }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPost: (newMessageBody) => {\r\n      dispatch(addPostActionCreator(newMessageBody));\r\n    }\r\n  }\r\n}\r\n\r\nlet MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\n\r\nconst Profile = (props) => {\r\n  return (\r\n    <div>\r\n      <ProfileInfo profile={props.profile} \r\n      status={props.status} \r\n      updateStatus={props.updateStatus}/>\r\n      <MyPostsContainer />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Profile;","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport Profile from './Profile';\r\nimport { getUserProfile, getStatus, updateStatus } from '../../redux/profile-reducer';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\n\r\n\r\nclass ProfileContainer extends Component {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push(\"/login\")\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId)\r\n        this.props.getStatus(userId)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Profile {...this.props}\r\n                    profile={this.props.profile}\r\n                    status={this.props.status}\r\n                    updateStatus={this.props.updateStatus} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, { getUserProfile, getStatus, updateStatus }),\r\n    withRouter\r\n)(ProfileContainer)"],"sourceRoot":""}