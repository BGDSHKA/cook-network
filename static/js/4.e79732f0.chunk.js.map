{"version":3,"sources":["components/Dialogs/Message/Message.jsx","components/Dialogs/AddMessageForm/AddMessageForm.jsx","components/Dialogs/Dialogs.jsx","hoc/WithAuthRedirect.js","components/Dialogs/DialogsContainer.jsx"],"names":["Message","props","className","s","dialog","message","maxLength50","maxLengthCreator","Textarea","FormControl","reduxForm","form","onSubmit","handleSubmit","Field","component","validate","required","name","placeholder","Dialogs","dialogsElements","dialogPage","dialogs","map","src","photo","DialogItem","key","id","messagesElements","messages","m","isAuth","dialogsItems","values","addMessage","newMessageBody","to","mapStateToPropsForRedirect","state","auth","compose","connect","dispatch","addMessageActionCreator","Component","RedirectComponent","this","React"],"mappings":"8LAWeA,EARC,SAACC,GACb,OAEI,yBAAKC,UAAWC,IAAEC,QAASH,EAAMI,U,0CCAnCC,EAAcC,YAAiB,IAC/BC,EAAWC,YAAY,YAgBdC,cAAU,CAACC,KAAM,wBAAjBD,EAdQ,SAACT,GACpB,OACI,0BAAMW,SAAUX,EAAMY,cAClB,6BACI,kBAACC,EAAA,EAAD,CAAOC,UAAWP,EAAUQ,SAAU,CAACC,IAAUX,GACjDY,KAAK,iBAAiBC,YAAY,wBAEtC,6BACI,6CCeDC,EAzBC,SAACnB,GACb,IAAIoB,EAAkBpB,EAAMqB,WAAWC,QAAQC,KAAI,SAACpB,GAAD,OAAY,oCAAE,yBAAKqB,IAAKrB,EAAOsB,QAAa,kBAACC,EAAA,EAAD,CAAYC,IAAKxB,EAAOyB,GAAIX,KAAMd,EAAOc,KAAMW,GAAIzB,EAAOyB,SACrJC,EAAmB7B,EAAMqB,WAAWS,SAASP,KAAI,SAAAQ,GAAC,OAAI,kBAAC,EAAD,CAASJ,IAAKI,EAAEH,GAAIxB,QAAS2B,EAAE3B,aAMzF,OAAKJ,EAAMgC,OAGP,yBAAK/B,UAAWC,IAAEoB,SACd,yBAAKrB,UAAWC,IAAE+B,cACbb,GAGL,yBAAKnB,UAAWC,IAAE4B,UACbD,GAEL,kBAAC,EAAD,CAAqBlB,SAfT,SAACuB,GACjBlC,EAAMmC,WAAWD,EAAOE,oBAGF,kBAAC,IAAD,CAAUC,GAAI,Y,wCCXxCC,EAA6B,SAACC,GAAD,MAAY,CAC3CP,OAAQO,EAAMC,KAAKR,S,OCgBNS,sBACXC,aAfkB,SAACH,GACnB,MAAO,CACHlB,WAAYkB,EAAMlB,eAID,SAACsB,GACtB,MAAO,CACHR,WAAY,SAACC,GACTO,EAASC,YAAwBR,UDRb,SAACS,GAAe,IACxCC,EADuC,4JAE3C,WACE,OAAKC,KAAK/C,MAAMgC,OAET,kBAACa,EAAcE,KAAK/C,OAFI,kBAAC,IAAD,CAAUqC,GAAG,eAHH,GACbW,IAAMH,WAYtC,OAJqCH,YAAQJ,EAARI,CACnCI,KCGWL,CAGbtB","file":"static/js/4.e79732f0.chunk.js","sourcesContent":["import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        \r\n        <div className={s.dialog}>{props.message}</div>\r\n        \r\n    )\r\n}\r\n\r\nexport default Message;","import React from 'react'\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { FormControl } from '../../../common/FormsControls/FormsControl';\r\nimport { maxLengthCreator, required } from '../../../utils/validators/validators';\r\n\r\n\r\nconst maxLength50 = maxLengthCreator(50); \r\nconst Textarea = FormControl('textarea');\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea} validate={[required, maxLength50]} \r\n                name=\"newMessageBody\" placeholder=\"Enter your message\" />\r\n            </div>\r\n            <div>\r\n                <button>Send</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default reduxForm({form: \"dialogAddMessageForm\"})(AddMessageForm)\r\n","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport Message from './Message/Message';\r\nimport { Redirect } from 'react-router-dom';\r\nimport AddMessageFormRedux from './AddMessageForm/AddMessageForm';\r\n\r\nconst Dialogs = (props) => {\r\n    let dialogsElements = props.dialogPage.dialogs.map((dialog) => <><img src={dialog.photo}></img><DialogItem key={dialog.id} name={dialog.name} id={dialog.id} /></>);\r\n    let messagesElements = props.dialogPage.messages.map(m => <Message key={m.id} message={m.message} />);\r\n\r\n    let addNewMessage = (values) => {\r\n        props.addMessage(values.newMessageBody);\r\n    }\r\n\r\n    if (!props.isAuth) return <Redirect to={\"/login\"} />\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n\r\n            <div className={s.messages}>\r\n                {messagesElements}\r\n            </div>\r\n            <AddMessageFormRedux onSubmit={addNewMessage} />\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Dialogs;","import React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n  isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n  class RedirectComponent extends React.Component {\r\n    render() {\r\n      if (!this.props.isAuth) return <Redirect to=\"/login\" />;\r\n\r\n      return <Component {...this.props} />;\r\n    }\r\n  }\r\n\r\n  let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(\r\n    RedirectComponent\r\n  );\r\n\r\n  return ConnectedAuthRedirectComponent;\r\n};\r\n","import React from 'react';\r\nimport { addMessageActionCreator } from '../../redux/dialogs-reducer';\r\nimport Dialogs from './Dialogs';\r\nimport { connect } from 'react-redux';\r\nimport { withAuthRedirect } from '../../hoc/WithAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogPage: state.dialogPage\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addMessage: (newMessageBody) => {\r\n            dispatch(addMessageActionCreator(newMessageBody));\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);"],"sourceRoot":""}